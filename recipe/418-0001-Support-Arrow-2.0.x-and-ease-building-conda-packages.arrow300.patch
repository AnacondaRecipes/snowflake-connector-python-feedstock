From 1583fd7040681a9e6d2d57d1f4801c36fb5c75f6 Mon Sep 17 00:00:00 2001
From: "Uwe L. Korn" <uwe.korn@quantco.com>
Date: Fri, 18 Sep 2020 19:51:12 +0200
Subject: [PATCH 1/2] Support Arrow 2.0.x and ease building conda packages

---
 pyproject.toml                             |  2 +-
 setup.py                                   | 30 ++++++++++++----------
 src/snowflake/connector/arrow_iterator.pyx |  9 +++++++
 3 files changed, 27 insertions(+), 14 deletions(-)

diff --git a/pyproject.toml b/pyproject.toml
index 204a9c0..a58827c 100644
--- a/pyproject.toml
+++ b/pyproject.toml
@@ -6,5 +6,5 @@ requires = [
     "wheel",
     "cython",
     # Must be kept in sync with the `setup_requirements` in `setup.py`
-    'pyarrow>=0.17.0,<0.18.0',
+    'pyarrow>=3.0.0,<3.1.0',
 ]
diff --git a/setup.py b/setup.py
index e9da24a..71a4d50 100644
--- a/setup.py
+++ b/setup.py
@@ -41,7 +41,7 @@ cmd_class = {}

 pandas_requirements = [
     # Must be kept in sync with pyproject.toml
-    'pyarrow>=0.17.0,<0.18.0',
+    'pyarrow>=3.0.0,<3.1.0',
     'pandas>=1.0.0,<1.2.0',
 ]

@@ -72,21 +72,21 @@ if _ABLE_TO_COMPILE_EXTENSIONS:
         # this list should be carefully examined when pyarrow lib is
         # upgraded
         arrow_libs_to_copy = {
-            'linux': ['libarrow.so.17',
-                      'libarrow_python.so.17',
-                      'libarrow_flight.so.17'],
-            'darwin': ['libarrow.17.dylib',
-                       'libarrow_python.17.dylib'],
+            'linux': ['libarrow.so.300',
+                      'libarrow_python.so.300',
+                      'libarrow_flight.so.300'],
+            'darwin': ['libarrow.300.dylib',
+                       'libarrow_python.300.dylib'],
             'win32': ['arrow.dll',
                       'arrow_python.dll',
                       'zlib.dll']
         }

         arrow_libs_to_link = {
-            'linux': ['libarrow.so.17',
-                      'libarrow_python.so.17'],
-            'darwin': ['libarrow.17.dylib',
-                       'libarrow_python.17.dylib'],
+            'linux': ['libarrow.so.300',
+                      'libarrow_python.so.300'],
+            'darwin': ['libarrow.300.dylib',
+                       'libarrow_python.300.dylib'],
             'win32': ['arrow.lib',
                       'arrow_python.lib']
         }
@@ -95,7 +95,8 @@ if _ABLE_TO_COMPILE_EXTENSIONS:
             current_dir = os.getcwd()

             if ext.name == 'snowflake.connector.arrow_iterator':
-                self._copy_arrow_lib()
+                if not os.environ.get("SF_NO_COPY_ARROW_LIB", False):
+                    self._copy_arrow_lib()
                 CPP_SRC_DIR = os.path.join(CONNECTOR_SRC_DIR, 'cpp')
                 ARROW_ITERATOR_SRC_DIR = os.path.join(CPP_SRC_DIR, 'ArrowIterator')
                 LOGGING_SRC_DIR = os.path.join(CPP_SRC_DIR, 'Logging')
@@ -126,8 +127,9 @@ if _ABLE_TO_COMPILE_EXTENSIONS:
                 elif platform == 'linux' or platform == 'darwin':
                     ext.extra_compile_args.append('-isystem' + pyarrow.get_include())
                     ext.extra_compile_args.append('-isystem' + numpy.get_include())
-                    ext.extra_compile_args.append('-std=c++11')
-                    ext.extra_compile_args.append('-D_GLIBCXX_USE_CXX11_ABI=0')
+                    if "std=" not in os.environ.get("CXXFLAGS", ""):
+                        ext.extra_compile_args.append('-std=c++11')
+                        ext.extra_compile_args.append('-D_GLIBCXX_USE_CXX11_ABI=0')

                 ext.library_dirs.append(os.path.join(current_dir, self.build_lib, 'snowflake', 'connector'))
                 ext.extra_link_args += self._get_arrow_lib_as_linker_input()
@@ -145,6 +147,8 @@ if _ABLE_TO_COMPILE_EXTENSIONS:
             build_ext.build_extension(self, ext)

         def _get_arrow_lib_dir(self):
+            if "SF_ARROW_LIBDIR" in os.environ:
+                return os.environ["SF_ARROW_LIBDIR"]
             return pyarrow.get_library_dirs()[0]

         def _copy_arrow_lib(self):
diff --git a/src/snowflake/connector/arrow_iterator.pyx b/src/snowflake/connector/arrow_iterator.pyx
index 2ea4634..03e957b 100644
--- a/src/snowflake/connector/arrow_iterator.pyx
+++ b/src/snowflake/connector/arrow_iterator.pyx
@@ -88,6 +88,13 @@ cdef extern from "arrow/api.h" namespace "arrow" nogil:
     cdef cppclass CRecordBatchReader" arrow::RecordBatchReader":
         CStatus ReadNext(shared_ptr[CRecordBatch]* batch)

+    cdef cppclass CResult "arrow::Result"[T]:
+        CResult()
+        CResult(CStatus)
+        CResult(T)
+        c_bool ok()
+        CStatus status()
+        T operator*()

 cdef extern from "arrow/ipc/api.h" namespace "arrow::ipc" nogil:
     cdef cppclass CRecordBatchStreamReader \
@@ -134,6 +141,8 @@ cdef extern from "arrow/python/api.h" namespace "arrow::py" nogil:
     cdef cppclass PyReadableFile(RandomAccessFile):
         PyReadableFile(object fo)

+    T GetResultValue[T](CResult[T]) except *
+

 cdef class EmptyPyArrowIterator:

--
2.30.0

