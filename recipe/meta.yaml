{% set name = "snowflake-connector-python" %}
{% set version = "3.14.1" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  # use GH release sources to use tests
  url: https://github.com/snowflakedb/{{ name }}/archive/refs/tags/v{{ version }}.tar.gz
  sha256: 87de09a6a224f095dc25caf17c40c36d076cfdeca34598b0671b792886ed765e
  
build:
  number: 100
  skip: true  # [py<39]
  script:
    - {{ PYTHON }} -m pip install . --no-deps --no-build-isolation -vv
  entry_points:
    - snowflake-dump-ocsp-response = snowflake.connector.tool.dump_ocsp_response:main
    - snowflake-dump-ocsp-response-cache = snowflake.connector.tool.dump_ocsp_response_cache:main
    - snowflake-dump-certs = snowflake.connector.tool.dump_certs:main

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
  host:
    - python
    - pip
    - cython
    - setuptools >=40.6.0
    - wheel
  run:
    - python
    - asn1crypto >0.24.0,<2.0.0
    - boto3 >=1.0
    - botocore >=1.0
    - cffi >=1.9,<2.0.0
    - cryptography >=3.1.0
    - pyopenssl >=22.0.0,<26.0.0
    - pyjwt <3.0.0
    - pytz
    - requests <3.0.0
    - packaging
    - charset-normalizer >=2,<4
    - idna >=2.5,<4
    - urllib3 >=1.21.1,<2.0.0  # [py<310]
    - certifi >=2017.4.17
    - typing-extensions >=4.3,<5
    - filelock >=3.5,<4
    - sortedcontainers >=2.4.0
    - platformdirs >=2.6.0,<5.0.0
    - tomlkit
  run_constrained:
    - pandas >=2.1.2,<3.0.0
    - pyarrow <19.0.0
    - keyring >=23.1.0,<26.0.0

{% set tests_to_ignore = "" %}
# AssertionError: $SRC_DIR/.wiremock/wiremock-standalone.jar does not exist.
# This file is excluded from the release tarball. Just ignore this test.
{% set tests_to_ignore = tests_to_ignore + " --ignore=test/unit/test_wiremock_client.py" %}
# AssertionError: $SRC_DIR/.wiremock does not exist
{% set tests_to_ignore = tests_to_ignore + " --ignore=test/unit//test_oauth_token.py" %}
# Using relative import
{% set tests_to_ignore = tests_to_ignore + " --ignore=test/unit/test_network.py" %}

{% set tests_to_deselect = "" %}
# linux: deselect the following tests because file permissions will not be set correctly and fail with DID NOT RAISE PermissionError.
#   >  with pytest.raises(PermissionError) as e:
#   E: Failed: DID NOT RAISE <class 'PermissionError'>
{% set tests_to_deselect = tests_to_deselect + " --deselect=test/unit/test_cache.py::TestSFDictFileCache::test_read_only" %}  # [linux]
{% set tests_to_deselect = tests_to_deselect + " --deselect=test/unit/test_easy_logging.py::test_config_file_inaccessible_path" %}  # [linux]
{% set tests_to_deselect = tests_to_deselect + " --deselect=test/unit/test_put_get.py::test_put_error" %}  # [linux]
{% set tests_to_deselect = tests_to_deselect + " --deselect=test/unit/test_configmanager.py::test_warn_config_file_owner" %}  # [linux]
{% set tests_to_deselect = tests_to_deselect + " --deselect=test/unit/test_configmanager.py::test_log_debug_config_file_parent_dir_permissions" %}  # [linux]
# AssertionError: $SRC_DIR/.wiremock does not exist
{% set tests_to_deselect = tests_to_deselect + " --deselect=test/unit/test_programmatic_access_token.py::test_valid_pat" %}
{% set tests_to_deselect = tests_to_deselect + " --deselect=test/unit/test_programmatic_access_token.py::test_invalid_pat" %}
# Using relative import
{% set tests_to_deselect = tests_to_deselect + " --deselect=test/unit/test_converter.py::test_decfloat_to_decimal_converter" %}

test:
  imports:
    - snowflake
    - snowflake.connector
    - snowflake.connector.auth
    - snowflake.connector.nanoarrow_arrow_iterator
  requires:
    - pip
    - pytest
  source_files:
    - test
  commands:
    - pip check
    - python -c "from importlib.metadata import version; assert(version('{{ name }}')=='{{ version }}')"
    - pytest -v test/unit {{ tests_to_ignore }} {{ tests_to_deselect }}

about:
  home: https://github.com/snowflakedb/snowflake-connector-python
  # MIT: src/snowflake/connector/vendored/urllib3/LICENSE.txt
  license: Apache-2.0 AND MIT
  license_family: Other
  license_file:
    - LICENSE.txt
    - NOTICE
  summary: Snowflake Connector for Python
  description: |
    The Snowflake Connector for Python provides an interface for
    developing Python applications that can connect to Snowflake
    and perform all standard operations. It provides a programming
    alternative to developing applications in Java or C/C++ using
    the Snowflake JDBC or ODBC drivers.
  doc_url: https://docs.snowflake.net/manuals/user-guide/python-connector.html
  dev_url: https://github.com/snowflakedb/snowflake-connector-python

extra:
  recipe-maintainers:
    - hajapy
    - talues
    - xhochy
    - mariusvniekerk
    - fhoehle
